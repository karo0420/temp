{"version":3,"sources":["webpack:///./src/views/auth/Register.vue","webpack:///./src/helpers/response.parser.js","webpack:///./src/views/auth/Register.vue?2655"],"names":["type","phoneNumber","register","disabled","loading","hasError","errors","ResponseParser","this","types","normal","error","response","res","data","status","methods","then","$router","push","name","params","phone","catch","err","parse","render"],"mappings":"0JACO,oB,iBAIH,eAAI,mB,gDAJN,eAMM,Y,iBAJJ,eAAyC,SAAlCA,KAAK,O,qDAAgB,EAAAC,YAAW,K,mBAAX,EAAAA,eAC5B,eAA+D,UAAtD,QAAK,8BAAE,EAAAC,UAAA,EAAAA,SAAA,qBAAWC,SAAU,EAAAC,SAAS,WAAQ,KACtD,E,eACA,eAAoD,2BAAzB,EAAAC,SAASC,QAAM,M,QAA5B,EAAAD,c,wCCNZE,E,WAEJ,aAAc,uBACZC,KAAKC,MAAQ,CACXC,OAAQ,EACRC,MAAO,G,4CAIX,SAAMC,GAA8B,IAApBZ,EAAoB,uDAAbQ,KAAKE,OACtBG,EAAM,KACV,OAAQb,GACN,KAAK,EACHa,EAAMD,EAASE,KACf,MACF,KAAK,EACHD,EAAMD,EAASA,SACf,MAIJ,OAFAJ,KAAKM,KAAOD,EAAIC,KAChBN,KAAKO,OAASF,EAAIE,OACXP,S,KAKI,MAAID,EDXJ,GACbO,KADa,WAEX,MAAO,CACLb,YAAa,GACbI,UAAU,EACVD,SAAS,IAGbY,QAAS,CACPd,SADO,WACI,WACTM,KAAKJ,SAAU,EACfI,KAAKH,UAAW,EAChB,OAAYH,SAASM,KAAKP,aACvBgB,MAAK,SAAAJ,GACJ,EAAKR,UAAW,EAChB,EAAKa,QAAQC,KAAK,CAACC,KAAM,UAAWC,OAAQ,CAACC,MAAOT,EAAIC,KAAKA,KAAKQ,YAEnEC,OAAM,SAAAC,GACL,IAAIV,EAAO,EAAeW,MAAMD,EAAK,GACrC,EAAKnB,SAAWS,EAAKA,QAEtBG,MAAK,WACJ,EAAKb,SAAU,QElCzB,EAAOsB,OAASA,EAED","file":"js/chunk-2d0e5060.298e018a.js","sourcesContent":["<template>\r\n  <div>\r\n    Phone number :\r\n    <input type=\"text\" v-model=\"phoneNumber\"> \r\n    <button @click=\"register\" :disabled=\"loading\">Continue</button>\r\n    <br>\r\n    <span v-show=\"hasError\">{{ hasError.errors }}</span>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport AuthService from '@/services/auth.service';\r\nimport ResponseParser from '@/helpers/response.parser'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      phoneNumber: '',\r\n      hasError: false,\r\n      loading: false\r\n    }\r\n  },\r\n  methods: {\r\n    register() {\r\n      this.loading = true;\r\n      this.hasError = false;\r\n      AuthService.register(this.phoneNumber)\r\n        .then(res=> {\r\n          this.hasError = false;\r\n          this.$router.push({name: 'Confirm', params: {phone: res.data.data.phone}});\r\n        })\r\n        .catch(err => {\r\n          let data = ResponseParser.parse(err, 2);\r\n          this.hasError = data.data;\r\n        })\r\n        .then(()=> {\r\n          this.loading = false;\r\n        })\r\n    }\r\n  },\r\n}\r\n</script>","class ResponseParser {\r\n\r\n  constructor() {\r\n    this.types = {\r\n      normal: 1,\r\n      error: 2\r\n    }\r\n  }\r\n\r\n  parse(response, type = this.normal) {\r\n    let res = null;\r\n    switch (type) {\r\n      case 1:\r\n        res = response.data;\r\n        break;\r\n      case 2:\r\n        res = response.response\r\n        break;\r\n    }\r\n    this.data = res.data;\r\n    this.status = res.status;\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport default new ResponseParser();","import { render } from \"./Register.vue?vue&type=template&id=7b7528ad\"\nimport script from \"./Register.vue?vue&type=script&lang=js\"\nexport * from \"./Register.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}